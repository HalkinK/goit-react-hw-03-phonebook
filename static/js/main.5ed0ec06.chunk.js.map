{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactItem/ContactItem.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","htmlFor","input","type","pattern","title","required","onChange","id","button","React","Component","ContactItem","contacts","deleteContact","map","onClick","defaultProps","ContactList","Filter","label","App","filter","onFormSubmit","contact","existContactName","find","toLowerCase","existContactNumber","existContact","alert","onDeleteContact","prevState","changeFilter","getVisibleContacts","normalzedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ed0ec06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__DPF-n\",\"label\":\"Filter_label__232Nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactItem_button__1Theg\"};","import React from \"react\";\nimport shortid from \"shortid\";\nimport styles from \"../ContactForm/ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <br />\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n        <br />\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = { onSubmit: PropTypes.func };\n\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"../ContactItem/ContactItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactItem = ({ contacts, deleteContact }) =>\n  contacts.map(({ id, name, number }) => {\n    return (\n      <li key={id}>\n        {name}: {number}\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\nContactItem.defaultProps = {\n  name: \"\",\n  number: \"\",\n  id: \"\",\n};\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport ContactItem from \"./ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul>\n    <ContactItem contacts={contacts} deleteContact={deleteContact} />\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n\n// const ContactList = ({ contacts }) => (\n//   <ul>\n//     {/* <ContactItem contacts={contacts} /> */}\n//     {contacts.map(({ id, name, number }) => (\n//       <li key={id}>\n//         {name}: {number}\n//       </li>\n//     ))}\n//   </ul>\n// );\n","import React from \"react\";\nimport styles from \"../Filter/Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onFormSubmit = ({ name, number }) => {\n    const contact = { id: shortid.generate(), name, number };\n    const { contacts } = this.state;\n\n    const existContactName = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const existContactNumber = contacts.find(\n      (contact) => contact.number.toLowerCase() === number.toLowerCase()\n    );\n\n    const existContact =\n      (existContactName && `${name}`) || (existContactNumber && `${number}`);\n\n    existContactName || existContactNumber\n      ? alert(`${existContact} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  onDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalzedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalzedFilter)\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.onFormSubmit} />\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <h2>Contacts</h2>\n        <ContactList\n          contacts={visibleContacts}\n          deleteContact={this.onDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3w8lq\",\"input\":\"ContactForm_input__lJOW1\",\"button\":\"ContactForm_button__2dtD0\"};"],"sourceRoot":""}